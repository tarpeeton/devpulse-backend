import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { Contact, ContactDocument } from './schemas/contact.schema';
import { TelegramService } from '../telegram/telegram.service';

@Injectable()
export class App2Service {
  constructor(
    @InjectModel(Contact.name) private contactModel: Model<ContactDocument>,
    private readonly telegramService: TelegramService,
  ) {}

  async createContact(data: any): Promise<Contact> {
    const contact = new this.contactModel({
      name: data.name,
      phone: data.phone,
      message: data.message,
    });
    const savedContact = await contact.save();
    const message = `–ù–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω!
    üë§ –ò–º—è: ${data.name}
    üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
    üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}
    `;
    await this.telegramService.sendMessage(message);
    return savedContact;
  }
}
